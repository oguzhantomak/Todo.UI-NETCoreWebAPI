#pragma checksum "/Users/YMS4191/Projects/WebApiUI/WebApiUI/Views/Home/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2bfc8941625bb5424f6706a1e6753b358f9e4561"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/YMS4191/Projects/WebApiUI/WebApiUI/Views/_ViewImports.cshtml"
using WebApiUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/YMS4191/Projects/WebApiUI/WebApiUI/Views/_ViewImports.cshtml"
using WebApiUI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2bfc8941625bb5424f6706a1e6753b358f9e4561", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bd984c94adff0cfd72829a6b4595bd67cfe4dc24", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/YMS4191/Projects/WebApiUI/WebApiUI/Views/Home/Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"row mt-5\">\r\n    <div class=\"col-4 border rounded shadow-sm pt-2 pb-2\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2bfc8941625bb5424f6706a1e6753b358f9e45613734", async() => {
                WriteLiteral("\r\n            <input type=\"hidden\" id=\"Id\"");
                BeginWriteAttribute("value", " value=\"", 196, "\"", 204, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
            <div class=""form-group"">
                <label>Yapılacak İş</label>
                <input type=""text"" class=""form-control"" id=""Name"" />
            </div>

            <div class=""form-group"">
                <div class=""custom-control custom-checkbox mr-sm-2"">
                    <input type=""checkbox"" class=""custom-control-input"" id=""isComplete"">
                    <label class=""custom-control-label"" for=""isComplete"">Durum</label>
                </div>
            </div>

            <div class=""form-group"">
                <input type=""button"" class=""btn btn-outline-dark btn-sm float-right"" value=""Save"" id=""save"" />
                <input type=""button"" class=""btn btn-outline-warning btn-sm float-right ml-1 mr-1"" value=""Update"" id=""edit"" />
                <input type=""button"" class=""btn btn-outline-danger btn-sm float-left"" value=""Cancel"" id=""cancel"" />
            </div>

        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>



<div class=""col ml-1 border rounded shadow-sm pt-2 pb-2"">
    <table class=""table table-hover"">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Result</th>
                <th>Options</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
    </div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>const url = ""http://localhost:5000/api/TodoItems"";

        //JavaScript enum
        const status = {
            EDIT: 'edit',
            SAVE: 'save'
        }
        let statu = status.SAVE;

        $(document).ready(function () {

            function List() {
                $.getJSON(url, function (data) {

                    $(""table tbody tr"").remove();
                    statu = status.SAVE;
                    $.each(data, function (key, value) {

                        let result = """";
                        let text = """";
                        if (value.isComplete) {
                            result = ""success"";
                            text = ""Completed !"";
                        }
                        else {
                            result = ""danger"";
                            text = ""Pending !"";
                        }


                        $(""table tbody"").append(`

<tr>
                        <td>${value.id}</td>
 ");
                WriteLiteral(@"                       <td>${value.name}</td>
                        <td><span class=""badge badge-${result}"">${text}</span></td>
                        <td>
                            <button data-id=""${value.id}"" class=""btn-sm btn-outline-primary btn-sm details""><i class=""fa fa-search""></i></button>
                            <button data-id=""${value.id}"" class=""btn-sm btn-outline-warning btn-sm edit""><i class=""fa fa-pencil""></i></button>
                            <button data-id=""${value.id}"" class=""btn-sm btn-outline-danger btn-sm delete""><i class=""fa fa-trash""></i></button>
                        </td>
                    </tr>



`)
                    });
                })
            }
            List();


            $(""#save"").click(function () {

                if (statu == status.EDIT) {
                    alert(""Lütfen güncelleme işlemini yapınız veya güncelleme işlemini iptal ediniz !"");
                    return;
                }
                const todoIte");
                WriteLiteral(@"m = new Object();
                todoItem.name = $(""#Name"").val();

                if ($(""#isComplete"").is("":checked"")) {
                    todoItem.isComplete = true;
                }
                else {
                    todoItem.isComplete = false;
                }
                $.ajax({
                    url: url,
                    dataType: ""json"",
                    type: ""post"",
                    data: JSON.stringify(todoItem),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    contentType: ""application/json"",
                    success: function (response) {
                        List();
                    },
                    error: function () { }


                })
                console.log(todoItem);
            })

            $(document).on(""click"", "".delete"", function () {
                const id = $(");
                WriteLiteral(@"this).data(""id"");

                $.ajax({
                    url: url + ""/"" + id,
                    dataType: ""json"",
                    type: ""delete"",
                    data: JSON.stringify(id),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    contentType: ""application/json"",
                    success: function (response) {
                        List();
                    },
                    error: function () { }


                })
            })


            $(document).on(""click"", "".edit"", function () {
                statu = status.EDIT;
                const id = $(this).data(""id"");
                $(""#Id"").val(id);

                $.ajax({
                    url: url + ""/"" + id,
                    dataType: ""json"",
                    type: ""get"",
                    data: JSON.stringify(id),
                   ");
                WriteLiteral(@" headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    contentType: ""application/json"",
                    success: function (response) {
                        $(""#Name"").val(response.name);
                        $(""#isComplete"").prop(""checked"", response.isComplete);

                    },
                    error: function () { }


                })
            })

            $(""#cancel"").click(function () {
                statu = status.SAVE;
                $(""#frm"")[0].reset();
            })

            $(""#edit"").click(function () {

                if (statu == status.SAVE) {
                    alert(""Lütfen ekleme işlemini yapınız veya ekleme işlemini iptal ediniz !"");
                    return;
                }
                const todoItem = new Object();
                todoItem.name = $(""#Name"").val();
                todoItem.Id= $(""#Id"").val");
                WriteLiteral(@"();

                if ($(""#isComplete"").is("":checked"")) {
                    todoItem.isComplete = true;
                }
                else {
                    todoItem.isComplete = false;
                }
                $.ajax({
                    url: url + ""/"" + todoItem.Id,
                    dataType: ""json"",
                    type: ""put"",
                    data: JSON.stringify(todoItem),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    contentType: ""application/json"",
                    success: function (response) {
                        List();
                        statu = status.SAVE;
                    },
                    error: function () { }


                })
                console.log(todoItem);
            })
        })</script>
");
            }
            );
            DefineSection("css", async() => {
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
            }
            );
            WriteLiteral("\r\n<!-- DELETE için. Her butonun üzerinde kendine ait o kaydın ID\'si bulunması gerekiyor. Bunun için data attribute kullanıyoruz. jquery data attribute-->");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
